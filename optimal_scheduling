
/// scheduling using different method:::: least recently used  ::
#include<bits/stdc++.h>
using namespace std;
int m=0,frame[10]={-1},ctr[100]={0};
int find_page(int num){
for (int i = 0; i < m; i++)
{
	if(frame[i] == num)
		return 1;

	/* code */
}
 	return 0;
}
void update(int p)
{
	for (int i = 0; i < m; ++i)
	{
		if(frame[i] == p )
			ctr[frame[i]] = m;
		else
			ctr[frame[i]]--;
		/* code */
	}
}

int main(){
int n=0,page[200]={0},fault=0;

printf("Enter the no. of pages and frame_size \n");
cin>>n>>m;

cout<<"Enter the pages : ";

for (int i = 0; i < n; ++i)
{
	//int p = (int)rand()%10;
	//	page[i] = p;
	cin>>page[i];
	//* code */
}
for (int i = 0; i < n; ++i)
{
	cout<<page[i]<<"  ";
	/* code */
}
cout<<endl;

for (int i = 0; i < m; ++i)
{
	frame[i] = -1; 
	/* code */
}
int index  =0,k;

for (int i = 0; i < n; ++i)
{
	
	if(index<m){
		frame[index++] = page[i];

		ctr[page[i]] = index;
		fault++;
	}
	else{
				//cout<<"HI "<<endl;

			if(find_page(page[i])==1){
				//cout<<"HI "<<endl;
				update(page[i]);
				}
		
		else{
			 int min1 = 999;
				//cout << "HERE" << endl;
				for(int j=0;j<m;j++)
				{
					if(ctr[frame[j]] <= min1 ){
						min1 = ctr[frame[j]];
						k = j;
					}
						//cout<<min1<<" k "<< k<<"  ";
				}
				cout<<endl;
				frame[k] = page[i];
				ctr[page[i]] = m;


				update(page[i]);
				fault++;
		}
	}
	for (int i = 0; i < m; ++i)
	{
		cout<<frame[i]<<" : "<<ctr[frame[i]]<<"   " ;
	}
	cout<<endl;
	cout<<fault<<endl;
}
cout<<fault<<endl;
return 0;
}



